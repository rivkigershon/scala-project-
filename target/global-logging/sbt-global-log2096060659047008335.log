[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 1.8.0_201)
[debug]       Load.loadUnit: plugins took 42.0707ms
[debug]       Load.loadUnit: defsScala took 0.0067ms
[debug] [Loading] Scanning directory C:\Users\USER\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\USER\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.2507 ms
[debug]           Load.resolveProject(global-plugins) took 2.4868ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\USER\.sbt\1.0\plugins, plugins: List(<none>))) took 6.7575ms
[debug] [Loading] Done in C:\Users\USER\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 13.2416ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0099ms
[debug]     Load.loadUnit(file:/C:/Users/USER/.sbt/1.0/plugins/, ...) took 56.4473ms
[debug]   Load.apply: load took 60.1107ms
[debug]   Load.apply: resolveProjects took 0.1958ms
[debug]   Load.apply: finalTransforms took 9.2425ms
[debug]   Load.apply: config.delegates took 0.2794ms
[debug]   Load.apply: Def.make(settings)... took 110.2161ms
[debug]   Load.apply: structureIndex took 24.6811ms
[debug]   Load.apply: mkStreams took 0.005ms
[info] loading global plugins from C:\Users\USER\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 549.1092ms
[debug]           Load.loadUnit: plugins took 56.5599ms
[debug]           Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory E:\NSO\Day13-Itai\HttpHuffmanTreeAKKA\project
[debug]             Load.loadUnit: mkEval took 0.2554ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\NSO\Day13-Itai\HttpHuffmanTreeAKKA\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.0482 ms
[info] loading settings for project httphuffmantreeakka-build from idea.sbt ...
[debug]               Load.resolveProject(httphuffmantreeakka-build) took 1.286ms
[debug]             Load.loadTransitive: finalizeProject(Project(id httphuffmantreeakka-build, base: E:\NSO\Day13-Itai\HttpHuffmanTreeAKKA\project, plugins: List(<none>))) took 3.7655ms
[debug] [Loading] Done in E:\NSO\Day13-Itai\HttpHuffmanTreeAKKA\project, returning: (httphuffmantreeakka-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 69.4557ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.8458ms
[debug]         Load.loadUnit(file:/E:/NSO/Day13-Itai/HttpHuffmanTreeAKKA/project/, ...) took 127.797ms
[debug]       Load.apply: load took 129.5468ms
[debug]       Load.apply: resolveProjects took 0.1154ms
[debug]       Load.apply: finalTransforms took 7.1675ms
[debug]       Load.apply: config.delegates took 0.2893ms
[debug]       Load.apply: Def.make(settings)... took 72.5697ms
[debug]       Load.apply: structureIndex took 23.7791ms
[debug]       Load.apply: mkStreams took 0.0087ms
[info] loading project definition from E:\NSO\Day13-Itai\HttpHuffmanTreeAKKA\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 583.7711ms
[debug]     Load.loadUnit: defsScala took 0.0072ms
[debug] [Loading] Scanning directory E:\NSO\Day13-Itai\HttpHuffmanTreeAKKA
[debug]       Load.loadUnit: mkEval took 0.4624ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\NSO\Day13-Itai\HttpHuffmanTreeAKKA, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6817 ms
[info] loading settings for project httphuffmantreeakka from build.sbt ...
[debug]         Load.resolveProject(httphuffmantreeakka) took 61.4781ms
[debug]       Load.loadTransitive: finalizeProject(Project(id httphuffmantreeakka, base: E:\NSO\Day13-Itai\HttpHuffmanTreeAKKA, plugins: List(<none>))) took 63.7366ms
[debug] [Loading] Done in E:\NSO\Day13-Itai\HttpHuffmanTreeAKKA, returning: (httphuffmantreeakka)
[debug]     Load.loadUnit: loadedProjectsRaw took 185.2582ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.4411ms
[debug]   Load.loadUnit(file:/E:/NSO/Day13-Itai/HttpHuffmanTreeAKKA/, ...) took 772.1695ms
[debug] Load.apply: load took 774.9278ms
[debug] Load.apply: resolveProjects took 0.1177ms
[debug] Load.apply: finalTransforms took 33.1168ms
[debug] Load.apply: config.delegates took 0.226ms
[debug] Load.apply: Def.make(settings)... took 118.3706ms
[debug] Load.apply: structureIndex took 31.2816ms
[debug] Load.apply: mkStreams took 0.0045ms
[info] set current project to HttpHuffmanTreeAKKA (in build file:/E:/NSO/Day13-Itai/HttpHuffmanTreeAKKA/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
